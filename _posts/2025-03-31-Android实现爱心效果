---
title: "Android 实现爱心"
date: 2025-03-31
categories: [Android]
tags: [签字板, Android]
---


# 通过自定义View绘制


'''java
import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Typeface;
import android.util.AttributeSet;
import android.view.View;

public class CustomView extends View {
    // 创建画笔类
    private Paint paint = new Paint();
    // 设置长宽高
    private int width, height;
    private double size = 10;
    private double z = 0.0;
    private int jj = 0;

    public CustomView(Context context, AttributeSet attrs) {
        super(context, attrs);
        setLayerType(View.LAYER_TYPE_SOFTWARE, null);
        paint.setColor(Color.RED);
        paint.setStyle(Paint.Style.FILL);
    }

    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);

        // 获取数据
        width = getWidth();
        height = getHeight();

        //循环遍历数据
        for (int ii = 30; ii > 0; ii--) {
            for (int i = 1; i < 400; i++) {
                int px = (int) (Math.random() * 10);
                int py = (int) (Math.random() * 10);
                double x = 16 * (Math.pow(Math.sin(z), 3)) * size + Math.pow((-1), px) * Math.random() * ii * Math.sqrt(ii) + width / 2;
                double y = -(13 * Math.cos(z) - 5 * Math.cos(2 * z) - 2 * Math.cos(3 * z) - Math.cos(4 * z)) * size + Math.pow((-1), py) * Math.random() * ii * Math.sqrt(ii) + height * 1 / 3;
                z += (Math.PI / 2.0) / 80;
                canvas.drawPoint((float) x, (float) y, paint);
            }
            if (ii < 3) {
                drawText(canvas, "", width / 2 - 100, 240);
                drawText(canvas, "", width / 2, 280);
            }
        }
        jj++;

        if (jj > 100) return;
        //刷新
        postInvalidateDelayed(500);
    }

    // 绘制文本
    private void drawText(Canvas canvas, String text, int x, int y) {
        Paint textPaint = new Paint();
        textPaint.setColor(Color.WHITE);
        textPaint.setTextSize(40);
        textPaint.setTypeface(Typeface.create(Typeface.DEFAULT, Typeface.BOLD));
        canvas.drawText(text, x, y, textPaint);
    }
}
